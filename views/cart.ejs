<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Cart</title>
  <link rel="stylesheet" href="/css/index.css" />
</head>

<body>
  <%- include('nav') %>
  <div class="cart-container">
    <h1 class="cart-title">My Cart:</h1>
    <table class="cart-table">
      <thead>
        <tr>
          <th>Image</th>
          <th>Details</th>
          <th>Quantity</th>
        </tr>
      </thead>
      <tbody id="cart-body"></tbody>
    </table>
    <button id="totalPriceBtn" class="total-price-btn">Total Price: ₹ 0</button>
  </div>
  <%- include('footer') %>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <script>

    const updateQty = (id, change) => {
      fetch(`/product/cart/update/${id}`, {
        method: "PATCH",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ qty: change })
      })
        .then((res) => res.json())
        .then((response) => {
          if (response.success) {
            get();
          } else {
            console.error("Failed to update quantity");
          }
        })
        .catch((err) => console.log(err));
    };

    const handlePayment = async (amount) => {
      let res = await fetch("/product/payment", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ amount: amount })
      });
      let order = await res.json();
      console.log(order);
      let options = { key: "rzp_test_7Grqtls4UrZJlU", amount: order.amount };
      let razorpay = new Razorpay(options);
      razorpay.open();
    };

    const display = (data) => {
    let totalprice = 0;
    const cartBody = document.getElementById("cart-body");
    cartBody.innerHTML = ""; 

    data.forEach((element) => {
        let product = element.productID;
        if (!product) return; // Skip if product is not found

        let ticketPrice = element.price;
        let ticketType = element.ticketType;
        totalprice += ticketPrice * element.qty;

        let row = document.createElement("tr");

        let imgTd = document.createElement("td");
        let img = document.createElement("img");
        img.src = product.img ? `/images/${product.img}` : "/images/default.png"; // Handle missing image
        img.classList.add("cart-img");
        imgTd.appendChild(img);

        let detailsTd = document.createElement("td");
        detailsTd.innerHTML = `
          <div class="cart-item-title">${product.title || "No Title"}</div>
          <div class="cart-item-info"><strong>Ticket Type:</strong> ${ticketType}</div>
          <div class="cart-item-info"><strong>Price:</strong> ₹${ticketPrice}</div>
        `;

        let qtyTd = document.createElement("td");
        let btnDecrease = document.createElement("button");
        btnDecrease.innerHTML = "-";
        btnDecrease.classList.add("cart-btn");
        btnDecrease.addEventListener("click", () => updateQty(element._id, -1));

        let qtyDisplay = document.createElement("span");
        qtyDisplay.innerHTML = `${element.qty}`;
        qtyDisplay.classList.add("cart-qty");

        let btnIncrease = document.createElement("button");
        btnIncrease.innerHTML = "+";
        btnIncrease.classList.add("cart-btn");
        btnIncrease.addEventListener("click", () => updateQty(element._id, 1));

        qtyTd.append(btnDecrease, qtyDisplay, btnIncrease);

        row.append(imgTd, detailsTd, qtyTd);
        cartBody.appendChild(row);
    });

    let totalPriceBtn = document.getElementById("totalPriceBtn");
    totalPriceBtn.innerHTML = `Total Price: ₹ ${totalprice}`;
    totalPriceBtn.addEventListener("click", () => handlePayment(totalprice));
};


    const get = async () => {
      fetch("/product/cartfind")
        .then((response) => response.json())
        .then((response) => {
          display(response);
        })
        .catch((error) => console.log(error));
    };
    get();
  </script>
</body>

</html>
